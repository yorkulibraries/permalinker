#!/usr/bin/perl -w

# Make safe York permalinks for articles and things.
# Given a URL, make an educated guess about whether or not it
# is going through EZProxy and, if not, how to make it do so.
#
# Result: Easier article permalinking.
#
# William Denton <wdenton@yorku.ca>
# February - July 2009

# Copyright (c) 2009 William Denton
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

use strict;

use CGI qw/:standard/;
use LWP::Simple qw(!head); # See CAVEAT in perldoc LWP::Simple
use YAML;

my $templateConfig = '/var/www/cgi-bin/template.yml';

# TODO Catch errors here.
my $template    = YAML::LoadFile($templateConfig);
my $permalinker = YAML::LoadFile($$template{'configFilePath'}.$$template{'permalinkerConfig'});

# Note that ? needs to be escaped to work in the regex.
# We'll unescape it later.
my $ezproxyURL       = 'http://' . $$permalinker{'ezproxy'} . '/login\?url=';

my ($file, $insert);

$file = $$template{'templatesPath'}.$$template{'pageTemplate'};
open FILE, $file or die "Cannot read $file: $!\n";
local $/; # Slurp it all up.
my $html = <FILE>;
close FILE;

$file = $$template{'templatesPath'}.$$template{'internalbanner'};
open FILE, $file or die "Cannot read $file: $!\n";
#local $/; # Slurp it all up.
$insert = <FILE>;
$html =~ s/::INTERNALBANNER.INC::/$insert/;
close FILE;

$file = $$template{'templatesPath'}.$$template{'graphicalheader'};
open FILE, $file or die "Cannot read $file: $!\n";
#local $/; # Slurp it all up.
$insert = <FILE>;
$html =~ s/::GRAPHICALHEADER.INC::/$insert/;
close FILE;

$file = $$template{'templatesPath'}.$$template{'footerwide'};
open FILE, $file or die "Cannot read $file: $!\n";
#local $/; # Slurp it all up.
$insert = <FILE>;
$html =~ s/::FOOTERWIDE.INC::/$insert/;
close FILE;

$file = $$template{'templatesPath'}.$$template{'googleanalytics'};
open FILE, $file or die "Cannot read $file: $!\n";
#local $/; # Slurp it all up.
$insert = <FILE>;
$html =~ s/::GOOGLEANALYTICS.INC::/$insert/;
close FILE;

$html =~ s/::PAGE_TITLE::/$$permalinker{'title'}/;
$html =~ s/::LEFT_NAV::/$$permalinker{'leftnav'}/;

my $query = new CGI;

my $urlToPermify = param('url') || "";
my $permalink = '';
my $message = '';

print header;

my $mainContent = "";

#my $mainContent = $$template{'mainContent_start'};
$mainContent =~ s/::BREADCRUMBS::/$$permalinker{'breadcrumbs'}/;
$mainContent .= qq(<h1>$$permalinker{'h1'}</h1>\n);
$mainContent .= p($$permalinker{'introMsg'});
$mainContent .= $$permalinker{'form'};

if ($urlToPermify =~ m|http://[\w\.]*$$permalinker{'ezproxy'}/.*|) {

    # E.g. http://dx.doi.org.ezproxy.library.yorku.ca/10.1016/j.jelekin.2007.04.002
    $message = $$permalinker{'ezProxiedAlready'};
    $permalink = $urlToPermify;

} elsif ($urlToPermify =~ /^$ezproxyURL/) {

    # E.g. http://ezproxy.library.york.ca/login?url=http://www.jstor.org/
    $message = $$permalinker{'ezProxyMsg'};
    $permalink = $urlToPermify;

} elsif ($urlToPermify =~ /^$$permalinker{'eresolverURL'}/) {

    # E.g. http://www.library.yorku.ca/eresolver/?id=50
    $message = $$permalinker{'eresolverMsg'};
    $permalink = $urlToPermify;

} elsif ($urlToPermify =~ m|^(doi:\s*)?(\d+\.\d+)/([\d\w\.]*)|i) {

    # It's a DOI, with or without the doi: prefix
    # E.g. doi: 10.1038/nature02999
    # or   doi:10.1038/nature02999
    # or   10.1038/nature02999
    $message = $$permalinker{'doiMsg'};
    $urlToPermify =~ s/^doi:\s*//i;
    $urlToPermify = "http://dx.doi.org/" . $urlToPermify;
    $permalink = $ezproxyURL . $urlToPermify;

} elsif ($urlToPermify =~ m|(pmid:\s*)(\d+)|i) {

    # It's a PMID.  Recognize it by the PMID prefix, otherwise it's
    # just a number.
    # E.g. PMID: 1
    $message = $$permalinker{'pmidMsg'};
    $urlToPermify =~ s/^pmid:\s*//i;
    $urlToPermify = "http://www.ncbi.nlm.nih.gov/pubmed/" . $urlToPermify;
    $permalink = $ezproxyURL . $urlToPermify;

} elsif ($urlToPermify eq "") {

    $permalink = "";

} else {

    $message = $$permalinker{'proxyMsg'};
    $permalink = $ezproxyURL . $urlToPermify;

}

if ($permalink) {

    $permalink =~ s|\\\?|\?|; # Unescape the ?.
    $mainContent .=  p($message);
    $mainContent .=  qq(<div class="permalink-generated"><a href="$permalink">$permalink</a> </div>);

}

# Check to see if there's any special help information for this
# vendor.
# TODO Make elegant.
foreach my $vendor (keys %{$permalinker}) {

    if ($urlToPermify =~ m|$vendor|i) {
	$mainContent .=  "<p>\n";
	if ($$permalinker{$vendor}{'helpAnchor'}) {
	    $mainContent .=  qq(This is a $$permalinker{$vendor}{'name'} link. );
	    $mainContent .=  qq(We have <a href="$$permalinker{'helpUrl'}#$$permalinker{$vendor}{'helpAnchor'}">more help on $$permalinker{$vendor}{'name'} permalinks</a>. );
	}
	$mainContent .=  "</p>\n";
    }

}

$mainContent .=  "</div>\n";

$html =~ s/::MAIN_CONTENT::/-------- $mainContent --------/;

print $html;

